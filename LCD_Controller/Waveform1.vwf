/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK_50Mhz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DB[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DB";
}

SIGNAL("DB[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DB";
}

SIGNAL("DB[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DB";
}

SIGNAL("DB[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DB";
}

SIGNAL("DB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DB";
}

SIGNAL("DB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DB";
}

SIGNAL("DB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DB";
}

SIGNAL("DB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DB";
}

SIGNAL("E")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MessageNumber")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("MessageNumber[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MessageNumber";
}

SIGNAL("MessageNumber[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MessageNumber";
}

SIGNAL("MessageNumber[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MessageNumber";
}

SIGNAL("MessageNumber[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MessageNumber";
}

SIGNAL("Ready_H")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Reset_L")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RW")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WriteMessage_L")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RomOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RomOut[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RomOut";
}

SIGNAL("RomOut[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RomOut";
}

SIGNAL("RomOut[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RomOut";
}

SIGNAL("RomOut[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RomOut";
}

SIGNAL("RomOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RomOut";
}

SIGNAL("RomOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RomOut";
}

SIGNAL("RomOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RomOut";
}

SIGNAL("RomOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RomOut";
}

SIGNAL("DriverReady")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("CLK_50Mhz")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("DB[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 490.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 3280.0;
		LEVEL 1 FOR 3770.0;
	}
}

TRANSITION_LIST("DB[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("DB[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 3850.0;
	}
}

TRANSITION_LIST("DB[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 3850.0;
	}
}

TRANSITION_LIST("DB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 4480.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 3850.0;
	}
}

TRANSITION_LIST("DB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 870.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 1600.0;
		LEVEL 0 FOR 4250.0;
	}
}

TRANSITION_LIST("DB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 870.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 4250.0;
	}
}

TRANSITION_LIST("DB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1270.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 400.0;
		}
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 4250.0;
	}
}

TRANSITION_LIST("E")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 570.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1040.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3910.0;
	}
}

TRANSITION_LIST("MessageNumber[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("MessageNumber[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("MessageNumber[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("MessageNumber[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Ready_H")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1730.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 3880.0;
		LEVEL 1 FOR 3790.0;
	}
}

TRANSITION_LIST("Reset_L")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 9520.0;
	}
}

TRANSITION_LIST("RS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 490.0;
		LEVEL 0 FOR 1240.0;
		LEVEL 1 FOR 840.0;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 3790.0;
	}
}

TRANSITION_LIST("RW")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 530.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 3870.0;
	}
}

TRANSITION_LIST("WriteMessage_L")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2320.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 7440.0;
	}
}

TRANSITION_LIST("RomOut[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 490.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 3280.0;
		LEVEL 1 FOR 3770.0;
	}
}

TRANSITION_LIST("RomOut[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("RomOut[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 3850.0;
	}
}

TRANSITION_LIST("RomOut[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 3850.0;
	}
}

TRANSITION_LIST("RomOut[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 4480.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 3850.0;
	}
}

TRANSITION_LIST("RomOut[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 870.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 1600.0;
		LEVEL 0 FOR 4250.0;
	}
}

TRANSITION_LIST("RomOut[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 870.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 4250.0;
	}
}

TRANSITION_LIST("RomOut[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1270.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 400.0;
		}
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 4250.0;
	}
}

TRANSITION_LIST("DriverReady")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 530.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 3870.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK_50Mhz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Reset_L";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "WriteMessage_L";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MessageNumber";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "MessageNumber[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MessageNumber[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MessageNumber[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MessageNumber[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
	CHILDREN = 9, 10, 11, 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "DB[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "DB[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "DB[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "DB[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "DB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "DB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "DB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "DB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "E";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Ready_H";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RW";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RomOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "RomOut[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "RomOut[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "RomOut[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "RomOut[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "RomOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "RomOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "RomOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "RomOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "DriverReady";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
